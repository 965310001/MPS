tasks.whenTaskAdded { task ->
    if (task.name.equals("lint")) {
        task.enabled = false
    }
}
apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao' // apply plugin

/*引入自定义的文件*/
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(rootProject.file("constants.properties")))

//Bugtags
//应用 Bugtags 插件，插件只支持 2.1.3 及以下的 ios 版本
apply plugin: 'com.bugtags.library.plugin'

//Bugtags 插件配置
bugtags {
    //自动上传符号表功能配置，如果需要根据 build varint 配置，请参考帮助中心->符号表->Android 符号表->配置自动上传符号表
    appKey keystoreProperties['BUGTAGS_APPKEY']  //这里是你的 appKey
    appSecret keystoreProperties['BUGTAGS_APPSECRET']    //这里是你的 appSecret，管理员在设置页可以查看
    mappingUploadEnabled true
}

android {

    /*Bugtags*/
    useLibrary 'org.apache.http.legacy'

    compileSdkVersion rootProject.ext.versions.compileSdkVersion

    defaultConfig {
        applicationId rootProject.ext.versions.applicationId
        minSdkVersion rootProject.ext.versions.minSdkVersion
        targetSdkVersion rootProject.ext.versions.targetSdkVersion
        versionCode rootProject.ext.versions.versionCode
        versionName rootProject.ext.versions.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        vectorDrawables.useSupportLibrary = true//启用矢量图支持

        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
                includeCompileClasspath = true
            }
        }
        multiDexEnabled true
    }
    signingConfigs {
        release {
            storeFile file(keystoreProperties['KEY_STOREFILE'])
            keyAlias keystoreProperties['KEY_ALIAS']
            keyPassword keystoreProperties['KEY_PASSWORD']
            storePassword keystoreProperties['PASSWORD']
        }
    }
    dataBinding {
        enabled = true
    }
    buildTypes {
        release {
            minifyEnabled false
            signingConfig signingConfigs.release

            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
//            buildConfigField "String", "APP_URL", "\"http://39.108.254.185/mobile/index.php\""
        }
        debug {
            signingConfig signingConfigs.release
//            signingConfig signingConfigs.release


            aaptOptions {
                cruncherEnabled = false
            }
//            buildConfigField "String", "APP_URL", "\"http://39.108.254.185/mobile/index.php\""
        }

    }
    dexOptions {
        javaMaxHeapSize "4g"
    }

    defaultConfig {
        vectorDrawables.useSupportLibrary = true
    }

}
//configurations.all {
//    resolutionStrategy.force 'com.android.support:support-annotations:27.1.1'
//}
dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    //    implementation 'com.android.support:appcompat-v7:28.0.0'
    //    implementation 'com.android.support.constraint:constraint-layout:1.1.3'
    //    testImplementation 'junit:junit:4.12'
    //    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    //    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
//    implementation project(':common_base')

    implementation project(':common_base_databing')
    implementation project(':module_pay')
    if (!Boolean.valueOf(rootProject.ext.isModule)) {
        //main模块
        implementation project(':module_home')
        implementation project(':module_class')
        implementation project(':module_cart')
        implementation project(':module_me')
    }

    /*微信支付*/
    implementation 'com.tencent.mm.opensdk:wechat-sdk-android-with-mta:+'

}
