tasks.whenTaskAdded { task ->
    if (task.name.equals("lint")) {
        task.enabled = false
    }
}
apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao' // apply plugin

/*引入自定义的文件*/
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(rootProject.file("constants.properties")))

android {

    /*Bugtags*/
    useLibrary 'org.apache.http.legacy'

    compileSdkVersion rootProject.ext.versions.compileSdkVersion

    defaultConfig {
        applicationId rootProject.ext.versions.applicationId
        minSdkVersion rootProject.ext.versions.minSdkVersion
        targetSdkVersion rootProject.ext.versions.targetSdkVersion
        versionCode rootProject.ext.versions.versionCode
        versionName rootProject.ext.versions.versionName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        vectorDrawables.useSupportLibrary = true//启用矢量图支持

        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [AROUTER_MODULE_NAME: project.getName()]
                includeCompileClasspath = true
            }
        }
        multiDexEnabled true
    }
    signingConfigs {
        release {
            storeFile file(keystoreProperties['KEY_STOREFILE'])
            keyAlias keystoreProperties['KEY_ALIAS']
            keyPassword keystoreProperties['KEY_PASSWORD']
            storePassword keystoreProperties['PASSWORD']
        }
    }
    dataBinding {
        enabled = true
    }
    buildTypes {
        release {
            minifyEnabled false
            signingConfig signingConfigs.release

            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            /*指定文件名字*/
            android.applicationVariants.all { variant ->
                variant.outputs.all {
                    outputFileName = "apk-${releaseTime()}.apk"
                }
            }
        }
        debug {
            signingConfig signingConfigs.release

            aaptOptions {
                cruncherEnabled = false
            }
        }

    }
    dexOptions {
        javaMaxHeapSize "4g"
    }

    defaultConfig {
        vectorDrawables.useSupportLibrary = true
    }

}

def releaseTime() {
    return new Date().format("yyyy.MM.dd", TimeZone.getTimeZone("UTC"))
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation project(':common_base_databing')
    implementation project(':module_pay')
    if (!Boolean.valueOf(rootProject.ext.isModule)) {
        //main模块
        implementation project(':module_home')
        implementation project(':module_class')
        implementation project(':module_cart')
        implementation project(':module_me')
    }
    /*微信支付*/
    implementation 'com.tencent.mm.opensdk:wechat-sdk-android-with-mta:+'
    implementation project(':bugly')
}
